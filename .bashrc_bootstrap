#!/bin/bash

if curl -V &> /dev/null; then 
    _dlcmd="curl -fsSL"
elif wget -V &> /dev/null; then
    _dlcmd="wget -qO -"
fi

get_micro () {
    if ! [[ -z "${_dlcmd}" ]]; then
        _installer="https://getmic.ro"
        mkdir -p "${HOME}/.local/bin/"
        pushd "${HOME}/.local/bin/"
            bash <(${_dlcmd} "${_installer}")
        popd
    fi
}

get_bash_completion () {
    if ! [[ -z "${_dlcmd}" ]]; then
        _src="https://github.com/scop/bash-completion/releases/download/2.11/bash-completion-2.11.tar.xz"
        tar -xJf <(${_dlcmd} "${_src}") -C "/tmp" &&
        pushd "/tmp/$(basename ${_src} .tar.xz)" &&
            ./configure &&
            make prefix="${HOME}/.local" &&
            make prefix="${HOME}/.local" install
        popd
        /bin/rm -rf "/tmp/$(basename ${_src} .tar.xz)"
    fi
}

get_starship () {
    if ! [[ -z "${_dlcmd}" ]]; then
        _installer="https://starship.rs/install.sh"
        mkdir -p "${HOME}/.local/bin/"
        sh <(${_dlcmd} "${_installer}") \
            --bin-dir "${HOME}/.local/bin" \
            --yes
    else
        echo "No download method available"
    fi
}

get_fzf () {
    if ! [[ -z "${_dlcmd}" ]]; then
        _completion="https://raw.githubusercontent.com/junegunn/fzf/master/shell/completion.bash"
	    _keybindings="https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.bash" 
        _installer="https://raw.githubusercontent.com/junegunn/fzf/master/install"
        mkdir -p "${HOME}/.local/bin/"
        mkdir -p "${HOME}/.local/shell/fzf"	
        ${_dlcmd} "${_completion}" > "${HOME}/.local/shell/fzf/completion.bash"
        ${_dlcmd} "${_keybindings}" > "${HOME}/.local/shell/fzf/key-bindings.bash"
        ${_dlcmd} "${_installer}" > "${HOME}/.local/install_fzf" &&
        pushd "${HOME}/.local" &&
            bash ./install_fzf \
                --bin \
                --no-update-rc \
                --no-zsh \
                --no-key-bindings
        popd
        /bin/rm -f "${HOME}/.local/install_fzf"
    else
        echo "No download method available"
    fi
    
}

# get_mosh () {
#     if ! [[ -z "${_dlcmd}" ]]; then
#         _src="https://mosh.org/mosh-1.3.2.tar.gz"
#         _platform=$(uname -sp | tr "[A-Z] " "[a-z]-" | sed "s/darwin.*/osx-universal_binary/")
#         _protoc="https://github.com/protocolbuffers/protobuf/releases/download/v21.2/protoc-21.2-${_platform}.zip"
#         ${_dlcmd} "${_protoc}" > "/tmp/${_protoc##*/}" &&
#         unzip -o "/tmp/${_protoc##*/}" -d "${HOME}/.local" &&
#         tar -xzf <(${_dlcmd} "${_src}") -C "/tmp" &&
#         pushd "/tmp/$(basename ${_src} .tar.gz)" &&
#             ./configure &&
#             make prefix="${HOME}/.local" &&
#             make prefix="${HOME}/.local" install
#         popd
#         /bin/rm -rf "/tmp/$(basename ${_src} .tar.xz)"
#     fi
# }